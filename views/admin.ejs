<!DOCTYPE html>
<html lang="az">
<head>
  <meta charset="UTF-8">
  <title>Admin Panel</title>
  <link rel="stylesheet" href="/admin.css">
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f5f6fa;
      padding: 20px;
    }
    h1 {
      color: #2c3e50;
      text-align: center;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 15px;
      background: #fff;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      border-radius: 10px;
      overflow: hidden;
    }
    th, td {
      padding: 10px;
      border-bottom: 1px solid #ddd;
      text-align: center;
    }
    th {
      background: #2c3e50;
      color: #fff;
    }
    tr:hover {
      background: #ecf0f1;
    }
    button {
      cursor: pointer;
    }
    .invite-btn {
      background: #27ae60;
      color: #fff;
      border: none;
      padding: 6px 10px;
      border-radius: 6px;
      font-size: 13px;
      margin-right: 5px;
    }
    .invite-btn:hover {
      background: #219150;
    }
    .delete-btn {
      background: #e74c3c;
      color: white;
      border: none;
      padding: 6px 10px;
      border-radius: 6px;
    }
    .delete-btn:hover {
      background: #c0392b;
    }
    #logout {
      position: absolute;
      top: 20px;
      right: 20px;
      text-decoration: none;
      background: #e67e22;
      color: white;
      padding: 8px 14px;
      border-radius: 8px;
    }
    label {
      margin-right: 10px;
    }
    #applyFilter {
      padding: 6px 12px;
      border-radius: 6px;
      border: none;
      background: #2980b9;
      color: #fff;
      cursor: pointer;
    }
    #applyFilter:hover {
      background: #2471a3;
    }
  </style>
</head>
<body>
  <h1>RSVP Siyahƒ±sƒ±</h1>

  <label>Ad filtri: <input type="text" id="filterName" placeholder="Ad √ºzr…ô axtar..."></label>
  <label>ƒ∞≈ütirak statusu:
    <select id="filterAttendance">
      <option value="">Hamƒ±sƒ±</option>
      <option value="Yes">G…ôl…ôc…ôk</option>
      <option value="No">G…ôlm…ôy…ôc…ôk</option>
      <option value="Maybe">B…ôlk…ô</option>
    </select>
  </label>
  <button id="applyFilter">Filtrl…ô</button>

  <table id="rsvpTable">
    <thead>
      <tr>
        <th>‚Ññ</th>
        <th>Ad</th>
        <th>Email</th>
        <th>Telefon</th>
        <th>Status</th>
        <th>Qeyd</th>
        <th>Tarix</th>
        <th>∆èm…ôliyyatlar</th>
      </tr>
    </thead>
    <tbody>
      <!-- Dinamik c…ôdv…ôl JS il…ô doldurulacaq -->
    </tbody>
  </table>

  <a href="/logout" id="logout">√áƒ±xƒ±≈ü</a>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const tableBody = document.querySelector('#rsvpTable tbody');
      const filterName = document.getElementById('filterName');
      const filterAttendance = document.getElementById('filterAttendance');
      const applyBtn = document.getElementById('applyFilter');

      let rsvpList = [];

      // Serverd…ôn RSVP-l…ôri g…ôtir
      async function fetchRSVP() {
        try {
          const res = await fetch('/api/rsvp');
          rsvpList = await res.json();
          applyFilters();
        } catch(err) {
          console.error(err);
          tableBody.innerHTML = '<tr><td colspan="8">M…ôlumatlarƒ± g…ôtirm…ôk m√ºmk√ºn olmadƒ±.</td></tr>';
        }
      }

      // C…ôdv…ôli g√∂st…ôr
function renderTable(list) {
  tableBody.innerHTML = '';

  if (list.length === 0) {
    tableBody.innerHTML = '<tr><td colspan="8">He√ß bir qeyd yoxdur.</td></tr>';
    return;
  }

  // RSVP-l…ôri k√∂hn…ôd…ôn yeniy…ô sort edirik
  const sortedList = [...list].sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));

  // RSVP-l…ôri …ôlav…ô edirik: k√∂hn…ô …ôn altda, yeni yuxarƒ±ya
  for (let i = sortedList.length - 1; i >= 0; i--) {
    const item = sortedList[i];
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${i + 2}</td> <!-- 1 sizin statik s…ôtir √º√ß√ºn saxlanƒ±b -->
      <td>${item.name || '-'}</td>
      <td>${item.email || '-'}</td>
      <td>${item.phone || '-'}</td>
      <td>${formatAttendance(item.attendance)}</td>
      <td>${item.note || '-'}</td>
      <td>${new Date(item.createdAt).toLocaleString()}</td>
      <td>
        <button class="invite-btn" onclick="sendInvite('${item._id}', '${item.email}', '${item.name}')">üì® D…ôv…ôt g√∂nd…ôr</button>
        <button class="delete-btn" onclick="deleteRsvp('${item._id}')">üóë Sil</button>
      </td>
    `;
    tableBody.appendChild(tr); // normal appendChild il…ô yuxarƒ±ya …ôlav…ô olunur
  }

  // Statik s…ôtir: sizin √º√ß√ºn 1, h…ômi≈ü…ô …ôn altda
  const myRow = document.createElement('tr');
  myRow.innerHTML = `
    <td>1</td>
    <td>∆èli H…ôs…ônov</td>
    <td>hesenovali2808@gmail.com</td>
    <td>0775775017</td>
    <td>T…ô≈ükilat√ßƒ±</td>
    <td>Bu √∂z…ôl g√ºn…ô r…ông qatmaƒüa hazƒ±rƒ±q</td>
    <td>15.10.2025, 15:15:15</td>
    <td></td>
  `;
  tableBody.appendChild(myRow); // …ôn altda …ôlav…ô olunur
}








      // Attendance t…ôrc√ºm…ôsi
      function formatAttendance(value) {
        if (!value) return '-';
        if (value === 'Yes') return 'G…ôl…ôc…ôk';
        if (value === 'No') return 'G…ôlm…ôy…ôc…ôk';
        if (value === 'Maybe') return 'B…ôlk…ô';
        return value;
      }

      // Filter funksiyasƒ±
      function applyFilters() {
        let filtered = [...rsvpList];
        const nameVal = (filterName.value || '').trim().toLowerCase();
        const attendanceVal = filterAttendance.value;

        if (nameVal) {
          filtered = filtered.filter(r => (r.name || '').toLowerCase().includes(nameVal));
        }

        if (attendanceVal) {
          filtered = filtered.filter(r => {
            if (attendanceVal === 'Yes') return r.attendance === 'Yes' || r.attendance === 'Maybe';
            return r.attendance === attendanceVal;
          });
        }

        renderTable(filtered);
      }

      applyBtn.addEventListener('click', applyFilters);
      filterName.addEventListener('input', applyFilters);
      filterAttendance.addEventListener('change', applyFilters);

      // T…ôk bir istifad…ô√ßiy…ô d…ôv…ôt g√∂nd…ôr
      window.sendInvite = async function(id, email, name) {
        if (!confirm(`${name} (${email}) √º√ß√ºn d…ôv…ôt g√∂nd…ôrilsin?`)) return;

        try {
          const res = await fetch(`/api/send-invite/${id}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
          });
          const data = await res.json();
          alert(data.message || 'Email g√∂nd…ôrildi!');
        } catch(err) {
          console.error(err);
          alert('D…ôv…ôt g√∂nd…ôril…ôrk…ôn x…ôta ba≈ü verdi.');
        }
      }

      // RSVP sil
      window.deleteRsvp = async function(id) {
        if (!confirm("Bu qeyd silinsin?")) return;
        try {
          const res = await fetch(`/api/rsvp/${id}`, { method: 'DELETE' });
          const data = await res.json();
          alert(data.message);
          fetchRSVP();
        } catch(err) {
          console.error(err);
          alert('Silin…ôrk…ôn x…ôta ba≈ü verdi.');
        }
      }

      // Ba≈ülanƒüƒ±cda m…ôlumatlarƒ± g…ôtir
      fetchRSVP();
    });
  </script>
</body>
</html>
